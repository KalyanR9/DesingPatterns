<resources>
    <string name="app_name">DesignPatternsSample</string>

    <string name="lbl_creational">Creation Pattern</string>
    <string name="lbl_structural">Structural Pattern</string>
    <string name="lbl_behavioural">Behavioural Pattern</string>
    <string name="lbl_creation_singleton_reflaction">Singleton (Reflaction Safe)</string>
    <string name="lbl_creation_singleton_cloning">Singleton (Cloning Safe)</string>
    <string name="lbl_creation_singleton_serialization">Singleton (Serialization Safe)</string>
    <string name="lbl_creation_singleton_multithreaded">Singleton (Multithreaded Safe)</string>
    <string name="lbl_creation_singleton_holder">Singleton (Holder Class)</string>
    <string name="lbl_creation_singleton_enum">Singleton (Enum Class)</string>
    <string name="lbl_creation_factory">Factory Pattern</string>
    <string name="lbl_creation_abstract_factory">Abstract Factory Pattern</string>
    <string name="lbl_creation_builder">Builder Pattern</string>
    <string name="lbl_creation_prototype">Prototype Pattern</string>

    <string name="msg_singleton_reflaction">You can Throw runtime exception is someone tries to make instance in case one instance is already exist.
        \n\nprivate SingletonReflactionSafe() {\n\tif (instance != null) {\n\t\tthrow new RuntimeException("Message");\n\t}\n}\n\nCOMPLETE TO SOURCE CODE</string>
    <string name="msg_singleton_clone">Throw CloneNotSupportedException exception from Override clone() method if someone tries to make other instance of it. Like below code
    \n\n@Override\nprotected Object clone() throws CloneNotSupportedException {\n\tif (instance != null) {\n\t\tthrow new CloneNotSupportedException("message");\n\t
        }\n\treturn super.clone();\n}\n\nCOMPLETE SOURCE CODE</string>
</resources>
